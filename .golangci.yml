# .golangci.yml 配置文件

# 运行配置选项
run:
  # 默认并发数为可用CPU数
  concurrency: 4
  
  # 超时设置，默认1分钟
  timeout: 1m
  
  # 退出代码，如果至少有一个问题被发现
  issues-exit-code: 1
  
  # 包含测试文件
  tests: true
  
  # 允许跳过目录
  skip-dirs:
    - vendor
    - data
  
  # 允许跳过文件
  skip-files:
    - '.*_test\.go$'

# 输出配置选项
output:
  # 输出格式: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  format: colored-line-number
  
  # 打印行号
  print-issued-lines: true
  
  # 打印linter名称
  print-linter-name: true

# 所有可用的linters列表及其配置
linters:
  # 启用所有linters
  enable-all: false
  
  # 禁用特定linters
  disable:
    - exhaustivestruct # 已弃用
    - golint           # 已弃用，使用revive代替
    - interfacer       # 已弃用
    - maligned         # 已弃用，使用govet代替
    - scopelint        # 已弃用，使用exportloopref代替
    - varcheck         # 已弃用，使用unused代替
    - deadcode         # 已弃用，使用unused代替
    - structcheck      # 已弃用，使用unused代替
  
  # 启用特定linters
  enable:
    - asciicheck       # 检查非ASCII标识符
    - bodyclose        # 检查HTTP响应体是否关闭
    - dogsled          # 检查过多的空白标识符
    - dupl             # 代码克隆检测器
    - errcheck         # 检查未处理的错误
    - exportloopref    # 检查循环变量引用
    - funlen           # 检查函数长度
    - gochecknoinits   # 检查init函数
    - goconst          # 查找可以替换为常量的重复字符串
    - gocritic         # 提供诊断的linter
    - gocyclo          # 检查函数的循环复杂度
    - gofmt            # 检查代码是否已gofmt格式化
    - goimports        # 检查导入是否已格式化
    - goprintffuncname # 检查printf类函数名称
    - gosec            # 检查安全问题
    - gosimple         # 检查代码简化
    - govet            # 检查Go源代码并报告可疑结构
    - ineffassign      # 检测无效赋值
    - misspell         # 检查常见拼写错误
    - nakedret         # 查找裸返回
    - noctx            # 查找发送HTTP请求时没有上下文的情况
    - nolintlint       # 检查nolint指令的格式
    - revive           # 快速、可配置、可扩展、灵活且美观的Go linter
    - staticcheck      # Go静态分析
    - stylecheck       # 样式检查
    - typecheck        # 类型检查
    - unconvert        # 删除不必要的类型转换
    - unparam          # 查找未使用的函数参数
    - unused           # 检查未使用的代码
    - whitespace       # 检查多余的空白

# 特定linter的配置
linters-settings:
  errcheck:
    # 检查类型断言的错误
    check-type-assertions: true
    
    # 检查空标识符赋值
    check-blank: true
  
  funlen:
    # 函数行数限制
    lines: 100
    # 函数语句数限制
    statements: 50
  
  gocyclo:
    # 循环复杂度限制
    min-complexity: 15
  
  dupl:
    # 重复代码检测的tokens数量
    threshold: 100
  
  goconst:
    # 最小字符串长度
    min-len: 3
    # 最小出现次数
    min-occurrences: 3
  
  gocritic:
    # 启用特定检查器
    enabled-checks:
      - appendCombine
      - argOrder
      - assignOp
      - badCond
      - boolExprSimplify
      - builtinShadow
      - captLocal
      - caseOrder
      - commentedOutCode
      - commentedOutImport
      - defaultCaseOrder
      - dupBranchBody
      - dupCase
      - dupSubExpr
      - elseif
      - emptyFallthrough
      - equalFold
      - flagDeref
      - ifElseChain
      - importShadow
      - indexAlloc
      - mapKey
      - newDeref
      - offBy1
      - rangeExprCopy
      - regexpMust
      - sloppyLen
      - stringXbytes
      - switchTrue
      - typeAssertChain
      - typeSwitchVar
      - underef
      - unlambda
      - unnecessaryBlock
      - unslice
      - valSwap
      - wrapperFunc
  
  misspell:
    # 美式英语
    locale: US
  
  nolintlint:
    # 允许缺少特定linter的nolint指令
    allow-unused: false
    # 禁止使用无特定linter的nolint指令
    allow-no-explanation: false
    # 要求nolint指令有解释
    require-explanation: true
    # 要求特定linter的nolint指令
    require-specific: true
  
  revive:
    # 最大问题数量
    max-issues-per-linter: 10
    # 每个文件最大问题数量
    max-same-issues: 3
    # 规则配置
    rules:
      - name: exported
        arguments: ["checkPrivateReceivers", "disableStutteringCheck"]
      - name: var-naming
        arguments: [["ID", "API", "HTTP", "JSON", "RSS", "URL"], []]
  
  unused:
    # 检查导出的函数
    check-exported: false
  
  whitespace:
    # 多行if条件的检查
    multi-if: true
    # 多行函数参数的检查
    multi-func: true

# 问题配置
issues:
  # 修复问题的最大数量
  max-issues-per-linter: 0
  # 每个文件修复相同问题的最大数量
  max-same-issues: 0
  
  # 排除特定问题
  exclude-rules:
    # 排除测试文件中的一些问题
    - path: _test\.go
      linters:
        - dupl
        - gosec
        - goconst
    
    # 排除特定文件中的一些问题
    - path: internal/infrastructure/logger/
      linters:
        - unused
        - unparam
    
    # 排除特定文件中的一些问题
    - path: cmd/
      linters:
        - funlen
        - gocyclo
    
    # 排除特定文件中的一些问题
    - path: internal/infrastructure/database/
      linters:
        - gosec